{"version":3,"file":"static/js/432.24b22176.chunk.js","mappings":"wUAEaA,EAAaC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAMxBC,EAAcH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,weA2B1BG,EAAeL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iCAIzBK,EAAYP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2mBA8BpBO,EAAQT,EAAAA,GAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,6XAoBpBS,EAAYX,EAAAA,GAAAA,OAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,unB,kKCzEhCW,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAEHE,SAAS,oBACTC,QACC,m1PACA,+DAEJC,MAAOJ,EAAAA,KAEJI,MAAM,yBACNF,SAAS,qBACZG,SAAUL,EAAAA,KAEPM,IAAI,EAAG,yCACPJ,SAAS,0BA6Fd,UA1FqB,WACnB,IAAMK,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CAAER,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDK,SAAU,SAAAC,GAAA,IAAGV,EAAIU,EAAJV,KAAMG,EAAKO,EAALP,MAAOC,EAAQM,EAARN,SAAQ,OAChCO,EAAaX,EAAMG,EAAOC,EAAS,EACrCN,iBAAAA,IAEIc,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,GAAkCC,EAAAA,EAAAA,MAAyBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDI,EAAYF,EAAA,GAAIG,EAAKH,EAAA,GAALG,MAEjBC,EAAcC,MACdC,EAAeD,MACfE,EAAkBF,MAElBZ,EAAY,eAAAe,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO9B,EAAMG,EAAOC,GAAQ,IAAA2B,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAG/C,OAFA7B,EAAO8B,YACPC,QAAQC,IAAI,CAAEtC,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,IAC3B6B,EAAAE,KAAA,EACmBf,EAAa,CAAEpB,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,IAAYmC,SAAS,KAAD,EAA7DR,EAAIE,EAAAO,KACV5B,GAAS6B,EAAAA,EAAAA,GAASV,EAAKW,QACvB5B,EAAS,aAELO,GAAOgB,QAAQC,IAAIjB,GAGvB,wBAAAY,EAAAU,OAAA,GAAAb,EAAA,KACD,gBAZiBc,EAAAC,EAAAC,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAclB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJF,EAAAA,EAAAA,MAACjE,EAAAA,GAAU,CAACyB,SAAUH,EAAOK,aAAawC,SAAA,EACxCF,EAAAA,EAAAA,MAAC3D,EAAAA,GAAY,CAAA6D,SAAA,EACXC,EAAAA,EAAAA,KAAChE,EAAAA,GAAW,CACViE,UAAU,eACVpD,UAAQ,EACRqD,YAAY,IACZC,KAAK,OACLvD,KAAK,OACLwD,GAAIlC,EACJmC,OAAQnD,EAAOoD,WACfC,SAAUrD,EAAOsD,aACjBC,MAAOvD,EAAOwD,OAAO9D,QAEvBoD,EAAAA,EAAAA,KAAC1D,EAAAA,GAAK,CAACqE,QAASzC,EAAY6B,SAAC,SAC5B7C,EAAO0D,QAAQhE,MAAQM,EAAO2D,OAAOjE,OACpCoD,EAAAA,EAAAA,KAAC5D,EAAAA,EAAS,CAAA2D,SAAE7C,EAAO2D,OAAOjE,WAG9BiD,EAAAA,EAAAA,MAAC3D,EAAAA,GAAY,CAAA6D,SAAA,EACXC,EAAAA,EAAAA,KAAChE,EAAAA,GAAW,CACViE,UAAU,eACVpD,UAAQ,EACRqD,YAAY,IACZC,KAAK,QACLvD,KAAK,QACLwD,GAAIhC,EACJiC,OAAQnD,EAAOoD,WACfC,SAAUrD,EAAOsD,aACjBC,MAAOvD,EAAOwD,OAAO3D,SAEvBiD,EAAAA,EAAAA,KAAC1D,EAAAA,GAAK,CAACqE,QAASvC,EAAa2B,SAAC,UAC7B7C,EAAO0D,QAAQ7D,OAASG,EAAO2D,OAAO9D,QACrCiD,EAAAA,EAAAA,KAAC5D,EAAAA,EAAS,CAAA2D,SAAE7C,EAAO2D,OAAO9D,YAG9B8C,EAAAA,EAAAA,MAAC3D,EAAAA,GAAY,CAAA6D,SAAA,EACXC,EAAAA,EAAAA,KAAChE,EAAAA,GAAW,CACViE,UAAU,eACVpD,UAAQ,EACRqD,YAAY,IACZC,KAAK,WACLvD,KAAK,WACLwD,GAAI/B,EACJgC,OAAQnD,EAAOoD,WACfC,SAAUrD,EAAOsD,aACjBC,MAAOvD,EAAOwD,OAAO1D,YAEvBgD,EAAAA,EAAAA,KAAC1D,EAAAA,GAAK,CAACqE,QAAStC,EAAgB0B,SAAC,aAChC7C,EAAO0D,QAAQ5D,UAAYE,EAAO2D,OAAO7D,WACxCgD,EAAAA,EAAAA,KAAC5D,EAAAA,EAAS,CAAA2D,SAAE7C,EAAO2D,OAAO7D,eAG9BgD,EAAAA,EAAAA,KAACxD,EAAAA,GAAS,CAAC2D,KAAK,SAAQJ,SAAC,kBAIjC,C","sources":["components/ContactForm/ContactForm.styled.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const StyledField = styled.input`\n  box-sizing: border-box;\n  width: 302px;\n  height: 54px;\n  padding: 16px;\n  border: 1px solid #6998aa;\n  border-radius: 8px;\n  font-family: inherit;\n  font-size: 16px;\n  line-height: 140%;\n  color: #1f1f1f;\n  transition: all 150ms ease;\n\n  &:focus-visible {\n    border: 1px solid #051839;\n    outline: 2px solid #6998aa;\n  }\n\n  &::placeholder {\n    color: transparent;\n  }\n\n  &:-webkit-autofill {\n    -webkit-box-shadow: 0 0 0 1000px #ffffff inset;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ErrorText = styled.p`\n  position: absolute;\n  padding: 4px;\n  width: 284px;\n  top: 44px;\n  left: 4px;\n  font-size: 12px;\n  line-height: 140%;\n  color: #dc6000;\n  background-color: #fff;\n  border-radius: 8px;\n  z-index: 2;\n\n  box-shadow: 0 0.125rem 0.5rem rgba(0, 0, 0, 0.3),\n    0 0.0625rem 0.125rem rgba(0, 0, 0, 0.2);\n\n  &::before {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    bottom: 100%;\n    left: 1.5em;\n    border: 0.75rem solid transparent;\n    border-top: none;\n    border-bottom-color: #fff;\n    filter: drop-shadow(0 -0.0625rem 0.0625rem rgba(0, 0, 0, 0.1));\n  }\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 50%;\n  left: 16px;\n  transform: translate(0%, -50%);\n  font-size: 16px;\n  line-height: 140%;\n  color: #1f1f1f;\n  transition: all 100ms ease;\n\n  .styled-input:focus + &,\n  .styled-input:not(:placeholder-shown) + & {\n    top: 0px;\n    font-size: 12px;\n    line-height: 140%;\n    color: #051839;\n    background-color: #fff;\n  }\n`;\n\nexport const AddButton = styled.button`\n  margin-top: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 16px 32px;\n  gap: 8px;\n\n  width: 302px;\n  height: 56px;\n\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n\n  color: #ffffff;\n\n  background: #204154;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 150ms ease;\n\n  &:disabled {\n    cursor: not-allowed;\n  }\n\n  &:focus-visible {\n    background: #6998aa;\n  }\n  &:active {\n    background: #051839;\n  }\n\n  @media (hover: hover) {\n    &:hover {\n      background: #6998aa;\n    }\n  }\n`;\n","import {\n  AddButton,\n  ErrorText,\n  FieldWrapper,\n  Label,\n  StyledField,\n  StyledForm,\n} from 'components/ContactForm/ContactForm.styled';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useRegisterUserMutation } from 'redux/authApi';\nimport { setToken } from 'redux/tokenSlice';\nimport uniqid from 'uniqid';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .required('Name is required')\n    .matches(\n      /^[\\p{L} '-]+$/u,\n      'Name may contain only letters, apostrophe, dash and spaces.'\n    ),\n  email: yup\n    .string()\n    .email('Invalid email address')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password must be 8 characters or more')\n    .required('Password is required'),\n});\n\nconst RegisterPage = () => {\n  const formik = useFormik({\n    initialValues: { name: '', email: '', password: '' },\n    onSubmit: ({ name, email, password }) =>\n      handleSubmit(name, email, password),\n    validationSchema,\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [registerUser, { error }] = useRegisterUserMutation();\n\n  const nameInputId = uniqid();\n  const emailInputId = uniqid();\n  const passwordInputId = uniqid();\n\n  const handleSubmit = async (name, email, password) => {\n    formik.resetForm();\n    console.log({ name, email, password });\n    // try {\n    const data = await registerUser({ name, email, password }).unwrap();\n    dispatch(setToken(data.token));\n    navigate('/contacts');\n\n    if (error) console.log(error);\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  };\n\n  return (\n    <>\n      <h2>Register Page</h2>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <FieldWrapper>\n          <StyledField\n            className=\"styled-input\"\n            required\n            placeholder=\".\"\n            type=\"text\"\n            name=\"name\"\n            id={nameInputId}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.name}\n          />\n          <Label htmlFor={nameInputId}>Name</Label>\n          {formik.touched.name && formik.errors.name && (\n            <ErrorText>{formik.errors.name}</ErrorText>\n          )}\n        </FieldWrapper>\n        <FieldWrapper>\n          <StyledField\n            className=\"styled-input\"\n            required\n            placeholder=\".\"\n            type=\"email\"\n            name=\"email\"\n            id={emailInputId}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          <Label htmlFor={emailInputId}>Email</Label>\n          {formik.touched.email && formik.errors.email && (\n            <ErrorText>{formik.errors.email}</ErrorText>\n          )}\n        </FieldWrapper>\n        <FieldWrapper>\n          <StyledField\n            className=\"styled-input\"\n            required\n            placeholder=\".\"\n            type=\"password\"\n            name=\"password\"\n            id={passwordInputId}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          <Label htmlFor={passwordInputId}>Password</Label>\n          {formik.touched.password && formik.errors.password && (\n            <ErrorText>{formik.errors.password}</ErrorText>\n          )}\n        </FieldWrapper>\n        <AddButton type=\"submit\">Register</AddButton>\n      </StyledForm>\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","StyledField","_templateObject2","FieldWrapper","_templateObject3","ErrorText","_templateObject4","Label","_templateObject5","AddButton","_templateObject6","validationSchema","yup","name","required","matches","email","password","min","formik","useFormik","initialValues","onSubmit","_ref","handleSubmit","dispatch","useDispatch","navigate","useNavigate","_useRegisterUserMutat","useRegisterUserMutation","_useRegisterUserMutat2","_slicedToArray","registerUser","error","nameInputId","uniqid","emailInputId","passwordInputId","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","resetForm","console","log","unwrap","sent","setToken","token","stop","_x","_x2","_x3","apply","arguments","_jsxs","_Fragment","children","_jsx","className","placeholder","type","id","onBlur","handleBlur","onChange","handleChange","value","values","htmlFor","touched","errors"],"sourceRoot":""}