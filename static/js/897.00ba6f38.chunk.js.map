{"version":3,"file":"static/js/897.00ba6f38.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","pages/LogInPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const StyledField = styled.input`\n  box-sizing: border-box;\n  width: 302px;\n  height: 54px;\n  padding: 16px;\n  border: 1px solid #6998aa;\n  border-radius: 8px;\n  font-family: inherit;\n  font-size: 16px;\n  line-height: 140%;\n  color: #1f1f1f;\n  transition: all 150ms ease;\n\n  &:focus-visible {\n    border: 1px solid #051839;\n    outline: 2px solid #6998aa;\n  }\n\n  &::placeholder {\n    color: transparent;\n  }\n\n  &:-webkit-autofill {\n    -webkit-box-shadow: 0 0 0 1000px #ffffff inset;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ErrorText = styled.p`\n  position: absolute;\n  padding: 4px;\n  width: 284px;\n  top: 44px;\n  left: 4px;\n  font-size: 12px;\n  line-height: 140%;\n  color: #dc6000;\n  background-color: #fff;\n  border-radius: 8px;\n  z-index: 2;\n\n  box-shadow: 0 0.125rem 0.5rem rgba(0, 0, 0, 0.3),\n    0 0.0625rem 0.125rem rgba(0, 0, 0, 0.2);\n\n  &::before {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    bottom: 100%;\n    left: 1.5em;\n    border: 0.75rem solid transparent;\n    border-top: none;\n    border-bottom-color: #fff;\n    filter: drop-shadow(0 -0.0625rem 0.0625rem rgba(0, 0, 0, 0.1));\n  }\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 50%;\n  left: 16px;\n  transform: translate(0%, -50%);\n  font-size: 16px;\n  line-height: 140%;\n  color: #1f1f1f;\n  transition: all 100ms ease;\n\n  .styled-input:focus + &,\n  .styled-input:not(:placeholder-shown) + & {\n    top: 0px;\n    font-size: 12px;\n    line-height: 140%;\n    color: #051839;\n    background-color: #fff;\n  }\n`;\n\nexport const AddButton = styled.button`\n  margin-top: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 16px 32px;\n  gap: 8px;\n\n  width: 302px;\n  height: 56px;\n\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n\n  color: #ffffff;\n\n  background: #204154;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 150ms ease;\n\n  &:disabled {\n    cursor: not-allowed;\n  }\n\n  &:focus-visible {\n    background: #6998aa;\n  }\n  &:active {\n    background: #051839;\n  }\n\n  @media (hover: hover) {\n    &:hover {\n      background: #6998aa;\n    }\n  }\n`;\n","import {\n  AddButton,\n  ErrorText,\n  FieldWrapper,\n  Label,\n  StyledField,\n  StyledForm,\n} from 'components/ContactForm/ContactForm.styled';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useLogInUserMutation } from 'redux/authApi';\nimport { setToken } from 'redux/tokenSlice';\nimport uniqid from 'uniqid';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .email('Invalid email address')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password must be 8 characters or more')\n    .required('Password is required'),\n});\n\nconst LogInPage = () => {\n  const formik = useFormik({\n    initialValues: { email: '', password: '' },\n    onSubmit: ({ email, password }) => handleSubmit(email, password),\n    validationSchema,\n  });\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [logInUser, { error }] = useLogInUserMutation();\n\n  const emailInputId = uniqid();\n  const passwordInputId = uniqid();\n\n  const handleSubmit = async (email, password) => {\n    formik.resetForm();\n    // try {\n    const user = await logInUser({ email, password }).unwrap();\n    dispatch(setToken(user.token));\n    navigate('/contacts');\n    if (error) console.log(error);\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  };\n\n  return (\n    <>\n      <h2>LogIn Page</h2>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <FieldWrapper>\n          <StyledField\n            className=\"styled-input\"\n            required\n            placeholder=\".\"\n            type=\"email\"\n            name=\"email\"\n            id={emailInputId}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          <Label htmlFor={emailInputId}>Email</Label>\n          {formik.touched.email && formik.errors.email && (\n            <ErrorText>{formik.errors.email}</ErrorText>\n          )}\n        </FieldWrapper>\n        <FieldWrapper>\n          <StyledField\n            className=\"styled-input\"\n            required\n            placeholder=\".\"\n            type=\"password\"\n            name=\"password\"\n            id={passwordInputId}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          <Label htmlFor={passwordInputId}>Password</Label>\n          {formik.touched.password && formik.errors.password && (\n            <ErrorText>{formik.errors.password}</ErrorText>\n          )}\n        </FieldWrapper>\n        <AddButton type=\"submit\">LogIn</AddButton>\n      </StyledForm>\n    </>\n  );\n};\n\nexport default LogInPage;\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","StyledField","_templateObject2","FieldWrapper","_templateObject3","ErrorText","_templateObject4","Label","_templateObject5","AddButton","_templateObject6","validationSchema","yup","email","required","password","min","formik","useFormik","initialValues","onSubmit","_ref","handleSubmit","navigate","useNavigate","dispatch","useDispatch","_useLogInUserMutation","useLogInUserMutation","_useLogInUserMutation2","_slicedToArray","logInUser","error","emailInputId","uniqid","passwordInputId","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_context","prev","next","resetForm","unwrap","sent","setToken","token","console","log","stop","_x","_x2","apply","arguments","_jsxs","_Fragment","children","_jsx","className","placeholder","type","name","id","onBlur","handleBlur","onChange","handleChange","value","values","htmlFor","touched","errors"],"sourceRoot":""}